{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","intialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41b182b8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport const Header =()=>{\r\n\treturn(\r\n        <div>\r\n           <h2>Expense Tracker</h2>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\t\t)\r\n}","export default(state,action)=>{\r\n\tswitch(action.type){\r\n\t\tcase 'DELETE_TRANSACTION':\r\n\t\t  return{\r\n\t\t  \t...state,\r\n\t\t  \ttransactions:state.transactions.filter(transaction => transaction.id !== action.payload)\r\n\t\t  }\r\n\t\tcase 'ADD_TRANSACTION':\r\n\t\t return{\r\n\t\t \t...state,\r\n\t\t \ttransactions:[action.payload, ...state.transactions]\r\n\t\t }  \r\n\t\tdefault:\r\n\t\t  return state;\r\n\t}\r\n}","import React, {createContext, useReducer} from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n//Intial state object that can be calculated using actions\r\n\r\nconst intialState ={\r\n\ttransactions:[]\r\n}\r\n\r\n//Create context\r\nexport const GlobalContext= createContext(intialState);\r\n\r\n//Provider component\r\n\r\nexport const GlobalProvider=({children})=>{\r\n\tconst [state,dispatch] =useReducer(AppReducer, intialState);\r\n\r\n  //Actions\r\n    function deleteTransaction(id){\r\n    \tdispatch({\r\n    \t\ttype:'DELETE_TRANSACTION',\r\n    \t\tpayload: id\r\n    \t});\r\n    }\r\n\r\n    function addTransaction(transaction){\r\n    \tdispatch({\r\n    \t\ttype:'ADD_TRANSACTION',\r\n    \t\tpayload: transaction\r\n    \t});\r\n    }\r\n\treturn(\r\n\t\t<GlobalContext.Provider value={{\r\n\t\t\ttransactions:state.transactions,\r\n            deleteTransaction,\r\n            addTransaction\r\n\t\t}}>\r\n\t       {children}\r\n\t    </GlobalContext.Provider>  \r\n\r\n\t\t);\r\n}\r\n","import React,{useContext} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\n\r\nexport const Balance =()=>{\r\n\r\n\tconst {transactions} = useContext(GlobalContext);\r\n\t\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total= amounts\r\n                 .reduce((acc,item)=>(acc+= item),0)\r\n                 .toFixed(2);\r\n\r\n\treturn(\r\n        <>\r\n           <h4>Your Balance</h4>\r\n           <h1>Rs {total}</h1>\r\n        </>\r\n\r\n\r\n\t\t)\r\n}","import React, {useContext} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\n\r\nexport const IncomeExpenses =()=>{\r\n\r\n  const {transactions} = useContext(GlobalContext);\r\n\tconst amounts = transactions.map(transaction => transaction.amount);\r\n  \r\n  const income =amounts\r\n     .filter(item => item>0)\r\n     .reduce((acc,item) =>(acc+=item),0)\r\n     .toFixed(2);\r\n\r\n  const expense =amounts\r\n     .filter(item => item<0)\r\n     .reduce((acc,item) =>(acc+=item),0)*-1\r\n     .toFixed(2);\r\n\r\n\r\n  return(\r\n        <div className=\"inc-exp-container\">\r\n          <div>\r\n            <h4>Income</h4>\r\n            <p className=\"money plus\">Rs {income}</p>  \r\n          </div>\r\n\r\n          <div>\r\n            <h4>Expense</h4>\r\n            <p className=\"money minus\">Rs {expense}</p>  \r\n          </div>\r\n\r\n        </div>\r\n\r\n\t\t)\r\n}","import React,{useContext} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\n\r\nexport const Transaction =({transaction})=>{\r\n   const {deleteTransaction} = useContext(GlobalContext);\r\n    const sign =transaction.amount<0? '-':'+';\r\n\treturn(\r\n        <li className={transaction.amount<0? 'minus':'plus'}>\r\n               {transaction.text} <span>{sign} Rs {Math.abs(transaction.amount)}</span><button onClick = {() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n            </li> \r\n\r\n\r\n\r\n\t\t)\r\n}","import React, {useContext} from 'react';\r\nimport {Transaction} from './Transaction'\r\n\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\n\r\n\r\nexport const TransactionList =()=>{\r\n\r\n  const {transactions} = useContext(GlobalContext);\r\n  \r\n\r\n\treturn(\r\n        <>\r\n          <h3>History</h3>\r\n\r\n          <ul  className=\"list\">\r\n            {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction}/>))}\r\n          </ul>  \r\n        </>\r\n\r\n\t\t)\r\n}","import React, {useState, useContext} from 'react';\r\nimport {GlobalContext} from '../context/GlobalState';\r\n\r\nexport const AddTransaction =()=>{\r\n  const[text,setText] = useState('');\r\n  const[amount,setAmount] = useState(0);\r\n\r\nconst {addTransaction} = useContext(GlobalContext);;\r\n \r\n const onSubmit = e =>{\r\n  e.preventDefault();\r\n\r\n  const newTransaction={\r\n    id: Math.floor(Math.random()*100000000),\r\n    text,//text:text\r\n    amount:+amount //+ changes string to number\r\n  }\r\n  addTransaction(newTransaction);\r\n }\r\n\treturn(\r\n        <>\r\n        <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label> \r\n          <input type=\"text\" value={text} onChange={(e)=>setText(e.target.value)} placeholder=\"Enter text...\"/>\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">Amount<br />(negative - expense, positive - income)</label> \r\n          <input type=\"text\" value={amount} onChange={(e)=>setAmount(e.target.value)} placeholder=\"Enter amount...\"/>\r\n        </div>\r\n\r\n        <button className=\"btn\">Add transaction</button>\r\n\r\n        </form>\r\n        </>\r\n\r\n\r\n\r\n\t\t)\r\n}","import React from 'react';\nimport{ Header} from './components/Header';\nimport{ Balance} from './components/Balance';\nimport{ IncomeExpenses} from './components/IncomeExpenses';\nimport{ TransactionList} from './components/TransactionList';\nimport{ AddTransaction} from './components/AddTransaction';\nimport {GlobalProvider} from './context/GlobalState';\nimport './App.css';\n\nfunction App() {\n  return (\n  \t<GlobalProvider>\n    <div >\n      <Header />\n      <div className=\"container\">\n\n       <Balance />\n       <IncomeExpenses />\n       <TransactionList />\n       <AddTransaction />\n      </div>\n\n    </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}